// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Collects user feedback on translation accuracy.
 *
 * - collectTranslationFeedback - A function to collect feedback on translation accuracy.
 * - CollectTranslationFeedbackInput - The input type for the collectTranslationFeedback function.
 * - CollectTranslationFeedbackOutput - The return type for the collectTranslationFeedback function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const CollectTranslationFeedbackInputSchema = z.object({
  originalText: z.string().describe('The original text that was translated.'),
  translatedText: z.string().describe('The translated text.'),
  feedback: z.enum(['thumbs_up', 'thumbs_down']).describe('User feedback on the translation.'),
});
export type CollectTranslationFeedbackInput = z.infer<typeof CollectTranslationFeedbackInputSchema>;

const CollectTranslationFeedbackOutputSchema = z.object({
  success: z.boolean().describe('Indicates whether the feedback was successfully recorded.'),
  message: z.string().optional().describe('A message indicating the status of the feedback process.'),
});
export type CollectTranslationFeedbackOutput = z.infer<typeof CollectTranslationFeedbackOutputSchema>;

export async function collectTranslationFeedback(input: CollectTranslationFeedbackInput): Promise<CollectTranslationFeedbackOutput> {
  return collectTranslationFeedbackFlow(input);
}

const collectTranslationFeedbackFlow = ai.defineFlow(
  {
    name: 'collectTranslationFeedbackFlow',
    inputSchema: CollectTranslationFeedbackInputSchema,
    outputSchema: CollectTranslationFeedbackOutputSchema,
  },
  async input => {
    // Simulate saving feedback to a database or other storage.
    // In a real application, this would involve writing to a database.
    console.log('Feedback received:', input);

    // For now, just return a success message.
    return {
      success: true,
      message: 'Feedback successfully recorded.',
    };
  }
);
